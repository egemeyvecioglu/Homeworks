                            | # name: Hasan Ege MeyvecioÄŸlu
                            | # ID : 2449783
                            | 
                            | 
0x000:                      | .pos 0
                            | # main
0x000: 30f40006000000000000 |     irmovq stack, %rsp #set stack
0x00a: 30f70002000000000000 |     irmovq root, %rdi #set arguments
0x014: 30f60803000000000000 |     irmovq k, %rsi 
0x01e: 802800000000000000   |     call kth_bst #call the function
0x027: 00                   |     halt
                            | 
                            | 
0x028:                      | kth_bst:
                            | 
0x028: 6277                 |     andq %rdi,%rdi #check whether the root is null
0x02a: 73bd00000000000000   |     je null_tree
0x033: 30f20800000000000000 |     irmovq $8,%rdx    #to play with rsp
0x03d: 6124                 |     subq %rdx,%rsp    #decrement rsp
0x03f: 40740000000000000000 |     rmmovq %rdi,(%rsp)#store caller functions root
0x049: 50770800000000000000 |     mrmovq 8(%rdi),%rdi#new rdi = root->left
0x053: 802800000000000000   |     call kth_bst
0x05c: 50740000000000000000 |     mrmovq (%rsp),%rdi #get the caller functions' root again
0x066: 30fe0000000000000000 |     irmovq $0,%r14
0x070: 40e40000000000000000 |     rmmovq %r14,(%rsp)
0x07a: 6024                 |     addq %rdx,%rsp     #increment rsp
0x07c: 2005                 |     rrmovq %rax, %rbp #candidate = kth_bst(root->left,k)
0x07e: 50960000000000000000 |     mrmovq (%rsi),%r9 
0x088: 6299                 |     andq %r9,%r9 # check *k
0x08a: 710801000000000000   |     jle ret_cand # return candidate if *k<=0
0x093: 30fc0100000000000000 |     irmovq $1,%r12
0x09d: 61c9                 |     subq %r12,%r9 #decrement k
0x09f: 40960000000000000000 |     rmmovq %r9,(%rsi)
0x0a9: 6299                 |     andq %r9,%r9 # check k again
0x0ab: 74c800000000000000   |     jne right_tree #if *k!=0 call function for right tree
0x0b4: 700b01000000000000   |     jmp ret_root   #else return root->data
                            |     
0x0bd:                      | null_tree:
0x0bd: 30f0ffffffffffffffff |     irmovq $-1,%rax #node is null, return -1
0x0c7: 90                   |     ret
                            | 
                            | 
0x0c8:                      | right_tree:
0x0c8: 6124                 |     subq %rdx,%rsp 
0x0ca: 40740000000000000000 |     rmmovq %rdi,(%rsp) #store old rdi
0x0d4: 50771000000000000000 |     mrmovq 16(%rdi),%rdi#set new rdi as root->right
0x0de: 802800000000000000   |     call kth_bst #call for new root
0x0e7: 50740000000000000000 |     mrmovq (%rsp),%rdi
0x0f1: 30fe0000000000000000 |     irmovq $0,%r14
0x0fb: 40e40000000000000000 |     rmmovq %r14,(%rsp)
0x105: 6024                 |     addq %rdx,%rsp #get previous rdi again
0x107: 90                   |     ret #return the value that has been set in the new function call in rax
                            | 
0x108:                      | ret_cand:
0x108: 2050                 |     rrmovq %rbp,%rax #return candidate
0x10a: 90                   |     ret
                            | 
0x10b:                      | ret_root:
0x10b: 50070000000000000000 |     mrmovq (%rdi),%rax#return root->data
0x115: 90                   |     ret
                            | 
                            | 
                            | 
                            | # Absolutely positioned here to debug addresses more easily.
0x200:                      | .pos 0x200
0x200:                      | root:
0x200: 1100000000000000     |     .quad 17
0x208: 1802000000000000     |     .quad node6
0x210: a802000000000000     |     .quad node24
0x218:                      | node6:
0x218: 0600000000000000     |     .quad 6
0x220: 3002000000000000     | .quad node4
0x228: 7802000000000000     |     .quad node11
0x230:                      | node4:
0x230: 0400000000000000     |     .quad 4
0x238: 4802000000000000     |     .quad node3
0x240: 6002000000000000     |     .quad node5
0x248:                      | node3:
0x248: 0300000000000000     |     .quad 3
0x250: 0000000000000000     | .quad 0
0x258: 0000000000000000     |     .quad 0
0x260:                      | node5:
0x260: 0500000000000000     |     .quad 5
0x268: 0000000000000000     |     .quad 0 # Remember that 0 is null.
0x270: 0000000000000000     |     .quad 0
0x278:                      | node11:
0x278: 0b00000000000000     |     .quad 11
0x280: 9002000000000000     | .quad node8
0x288: 0000000000000000     |     .quad 0
0x290:                      | node8:
0x290: 0800000000000000     |     .quad 8
0x298: 0000000000000000     |     .quad 0
0x2a0: 0000000000000000     |     .quad 0
0x2a8:                      | node24:
0x2a8: 1800000000000000     |     .quad 24
0x2b0: c002000000000000     |     .quad node19
0x2b8: d802000000000000     |     .quad node40
0x2c0:                      | node19:
0x2c0: 1300000000000000     |     .quad 19
0x2c8: 0000000000000000     |     .quad 0
0x2d0: 0000000000000000     |     .quad 0
0x2d8:                      | node40:
0x2d8: 2800000000000000     |     .quad 40
0x2e0: 0000000000000000     |     .quad 0
0x2e8: f002000000000000     |     .quad node52
0x2f0:                      | node52:
0x2f0: 3400000000000000     |     .quad 52
0x2f8: 0000000000000000     |     .quad 0
0x300: 0000000000000000     |     .quad 0
0x308:                      | k:
0x308: 0800000000000000     | .quad 8
                            | 
0x600:                      | .pos 0x600
0x600:                      | stack:
