# name: Hasan Ege MeyvecioÄŸlu
# ID : 2449783

.pos 0
# main
    irmovq stack, %rsp
    irmovq ele0, %rdi
    irmovq array, %rsi
    irmovq $56, %rdx
    call insert
    halt

# return the index of an element in an array
insert:
    rmmovq %rdx,(%rsi) # array->value = value
    xorq %rax, %rax  #rax = 0
    rrmovq %rdi, %r11 #temp =  head
    andq %r11, %r11 #head=null?
    je if_satisfied #if so, return
    mrmovq (%rdi), %r9 #tmp=head->value
    subq %rdx,%r9
    jg if_satisfied
    rrmovq %rdi,%r9 #*temp = head
    jmp loop
if_satisfied:
    rmmovq %rdi,8(%rsi)
    rrmovq %rsi,%rax
    ret
loop:
    mrmovq 8(%r9), %r12 #temp2->next
    mrmovq (%r12), %rax #temp2->next->value
    andq %r12, %r12 #if temp2->next==0
    je loop_Done #end loop
    subq %rdx,%rax #if (temp2->next->value)- value >= 0
    jge loop_Done #end loop
    rrmovq %r12,%r9 #temp2=temp2->next
    jmp loop
loop_Done:
    mrmovq 8(%r9),%r12  #temp2->next;
    rmmovq  %r12,8(%rsi) #*(array+1) = temp2->next
    rmmovq %rsi,8(%r9) #temp2->next =array
    rrmovq %rdi,%rax # return head
    ret



.pos 0x200
ele0:
.quad 0x0005 
.quad ele1
ele1:
.quad 0x000c 
.quad ele2
ele2:
.quad 0x0010 
.quad ele3
ele3:
.quad 0x001a 
.quad ele4
ele4:
.quad 0x0030
.quad ele5
ele5:
.quad 0x0045
.quad ele6
ele6:
.quad 0x005e
.quad 0 # Remember that 0 is null.

.pos 0x400
array:
    .quad 0
    .quad 0


.pos 0x600
stack:
